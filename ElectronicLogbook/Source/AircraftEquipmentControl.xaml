<UserControl x:Class="ElectronicLogbook.AircraftEquipmentControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ElectronicLogbook.ViewModel"
             xmlns:usercontrol="clr-namespace:ElectronicLogbook">
    <Grid Name="TopGrid">
        <Grid.Resources>
            <Style x:Key="GridSplitterStyle">
                <Setter Property="GridSplitter.Background" Value="Transparent"/>
                <Style.Triggers>
                    <Trigger Property="GridSplitter.IsMouseOver" Value="True">
                        <Setter Property="GridSplitter.Background" Value="#FF294E38"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <FrameworkElement x:Key="DataContextBridge"/>
        </Grid.Resources>
        <Grid.DataContext>
            <Binding Mode="OneWayToSource" Path="DataContext" Source="{StaticResource DataContextBridge}"/>
        </Grid.DataContext>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TreeView BorderBrush="Transparent" Grid.Column="0" Name="AircraftEquipmentConfigTreeView" Padding="-5,0,20,0">
            <TreeViewItem Name="EquipmentRoot" Header="Equipment List" BorderBrush="Transparent" 
                          ItemsSource="{Binding Path=mAirCraftEquipmentConfigViewModelList, Mode=TwoWay}"
                          KeyDown="AircraftEquipmentConfigTreeView_KeyDown">
                <TreeViewItem.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeViewItem.ItemContainerStyle>
                <TreeViewItem.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="New Equipment..." Click="CreateNewEquipment" IsEnabled="{Binding mIsEditable}"/>
                    </ContextMenu>
                </TreeViewItem.ContextMenu>
                <!--Text="{Binding mConfigName, Mode=TwoWay}"-->
                <TreeViewItem.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type local:AirCraftEquipmentConfigViewModel}"
                                              ItemsSource="{Binding mChildren, Mode=TwoWay}">
                        <usercontrol:EditableTextBlock  Text="{Binding mConfigName, Mode=TwoWay}" IsInEditMode="{Binding IsInEditMode, Mode=TwoWay}">
                            <usercontrol:EditableTextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="New SubEquipment" Click="CreateNewSubEquipment" DataContext="{Binding 
                                        Source={StaticResource DataContextBridge}, Path=DataContext}" 
                                              IsEnabled="{Binding mIsEditable}"/>
                                    <MenuItem Header="Remove" Click="RemoveEquipment" DataContext="{Binding 
                                        Source={StaticResource DataContextBridge}, Path=DataContext}" 
                                              IsEnabled="{Binding mIsEditable}"/>
                                    <MenuItem Header="Rename" Click="Rename" DataContext="{Binding 
                                        Source={StaticResource DataContextBridge}, Path=DataContext}" 
                                              IsEnabled="{Binding mIsEditable}"/>
                                </ContextMenu>
                            </usercontrol:EditableTextBlock.ContextMenu>                                
                        </usercontrol:EditableTextBlock>
                    </HierarchicalDataTemplate>

                    <DataTemplate DataType="{x:Type local:SubEquipmentViewModel}">
                        <usercontrol:EditableTextBlock Text="{Binding mEquipmentID, Mode=TwoWay}" IsInEditMode="{Binding IsInEditMode, Mode=TwoWay}">
                            <usercontrol:EditableTextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Remove" Click="RemoveSubEquipment" DataContext="{Binding 
                                        Source={StaticResource DataContextBridge}, Path=DataContext}" 
                                              IsEnabled="{Binding mIsEditable}"/>
                                    <MenuItem Header="Rename" Click="Rename" DataContext="{Binding 
                                        Source={StaticResource DataContextBridge}, Path=DataContext}" 
                                              IsEnabled="{Binding mIsEditable}"/>
                                </ContextMenu>
                            </usercontrol:EditableTextBlock.ContextMenu>
                        </usercontrol:EditableTextBlock>
                    </DataTemplate>
                </TreeViewItem.Resources>
            </TreeViewItem>
        </TreeView>
        <GridSplitter Width="2.5" Grid.Column="0" Style="{StaticResource GridSplitterStyle}"/>
        <Grid Grid.Column="1" Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Expander Header="HW Part" MinHeight="50" Name="TestExpander" IsExpanded="True">
                <DataGrid ItemsSource="{Binding ElementName=AircraftEquipmentConfigTreeView, Path=SelectedItem.mHWPartList, Mode=TwoWay}" CanUserReorderColumns="True"
                            CanUserResizeColumns="True" CanUserResizeRows="True" CanUserSortColumns="True"
                            SelectionMode="Extended" SelectionUnit="FullRow" AutoGenerateColumns="False"
                            AreRowDetailsFrozen="False" Height="auto" Background="White" IsReadOnly="{Binding mIsReadOnly}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Compare Result" Binding="{Binding mCompareResult}" 
                                            Visibility="{Binding  Source={x:Reference AircraftEquipmentConfigTreeView}, Path=SelectedItem.mHWPartCompareResultColumnVisibility}"/>
                        <DataGridTextColumn Header="HW Part Index" Binding="{Binding mHWPartIndex}"/>
                        <DataGridTextColumn Header="HW Part Number" Binding="{Binding mHWPartNumber}"/>
                        <DataGridTextColumn Header="HW Part Description" Binding="{Binding mHWPartDescription}"/>
                        <DataGridTextColumn Header="HW Part Status" Binding="{Binding mHWPartStatus}"/>
                        <DataGridTextColumn Header="HW Part Serial Number" Binding="{Binding mHWPartSerialNumber}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Expander>
           <!-- <GridSplitter Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Style="{StaticResource GridSplitterStyle}"/>
-->
            <Expander Header="SW_Config" Grid.Row="1"  MinHeight="100" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TreeView Name="SWConfigListTreeView" Grid.Row="0" Grid.Column="0"
                              Padding="-5,0,10,0" BorderBrush="Transparent" KeyDown="SWConfigListTreeView_KeyDown">
                        <TreeViewItem Name="SWConfigRoot" Header="SWConfigIndex" 
                                      ItemsSource="{Binding ElementName=AircraftEquipmentConfigTreeView, Path=SelectedItem.mSWConfigList, 
                            Mode=TwoWay}">
                            <TreeViewItem.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="FontWeight" Value="Normal" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeViewItem.ItemContainerStyle>
                            <TreeViewItem.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="New SWConfig..." Click="CreateNewSWConfig" DataContext="{Binding 
                                        Source={StaticResource DataContextBridge}, Path=DataContext}" 
                                              IsEnabled="{Binding mIsEditable}"/>
                                </ContextMenu>
                            </TreeViewItem.ContextMenu>
                            <TreeViewItem.ItemTemplate>
                                <DataTemplate DataType="{x:Type local:SWConfigViewModel}">
                                    <usercontrol:EditableTextBlock Text="{Binding mSWConfigIndex, Mode=TwoWay}" IsInEditMode="{Binding IsInEditMode, Mode=TwoWay}">
                                        <usercontrol:EditableTextBlock.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Remove" Click="RemoveSWConfig" DataContext="{Binding 
                                        Source={StaticResource DataContextBridge}, Path=DataContext}" 
                                              IsEnabled="{Binding mIsEditable}"/>
                                                <MenuItem Header="Rename" Click="Rename" DataContext="{Binding 
                                        Source={StaticResource DataContextBridge}, Path=DataContext}" 
                                              IsEnabled="{Binding mIsEditable}"/>
                                            </ContextMenu>
                                        </usercontrol:EditableTextBlock.ContextMenu>
                                    </usercontrol:EditableTextBlock>
                                </DataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                    </TreeView>

                    <GridSplitter Width="2.5" Grid.Column="0"  Style="{StaticResource GridSplitterStyle}"/>
                    <DockPanel Grid.Row="0" Grid.Column="1">
                        <Grid DockPanel.Dock="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding label1.width}" />
                                <ColumnDefinition Width="{Binding TextBox.width}" />
                            </Grid.ColumnDefinitions>
                        
                            <Label Name="label1" Grid.Row="0" Grid.Column="0">SW Location ID:</Label>
                            <TextBox Name="TextBox" Grid.Row="0" Grid.Column="1" Text="{Binding ElementName=SWConfigListTreeView, 
                        Path=SelectedItem.mSWLocationID, Mode=TwoWay}" IsReadOnly="{Binding mIsReadOnly}"/>
                            <Label Grid.Row="1" Grid.Column="0">SW Location Description:</Label>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ElementName=SWConfigListTreeView, 
                        Path=SelectedItem.mSWLocationDescription, Mode=TwoWay}" IsReadOnly="{Binding mIsReadOnly}"/>
                        </Grid>

                        <DataGrid ItemsSource="{Binding ElementName=SWConfigListTreeView, Path=SelectedItem.mSWPartList, Mode=TwoWay}" CanUserReorderColumns="True"
                          CanUserResizeColumns="True" CanUserResizeRows="True" CanUserSortColumns="True"
                          SelectionMode="Extended" SelectionUnit="FullRow" AutoGenerateColumns="False"
                          AreRowDetailsFrozen="False" Height="auto" Background="White" IsReadOnly="{Binding mIsReadOnly}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="SW Part Index" Binding="{Binding mSWPartIndex}"/>
                                <DataGridTextColumn Header="LSAP Part Number" Binding="{Binding mLSAPPartNumber}"/>
                                <DataGridTextColumn Header="LSAP Description" Binding="{Binding mLSAPDescription}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>
                    
            </Expander>

            <!--<GridSplitter Height="2" Grid.Row="1" HorizontalAlignment="Stretch" 
                          VerticalAlignment="Bottom" Style="{StaticResource GridSplitterStyle}"/>-->
            <Expander Header="Config info" Grid.Row="2"  MinHeight="50" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <DataGrid Grid.Row="0" Grid.Column="0" ItemsSource="{Binding ElementName=AircraftEquipmentConfigTreeView, Path=SelectedItem.mConfigInfoList, Mode=TwoWay}" CanUserReorderColumns="True"
                          CanUserResizeColumns="True" CanUserResizeRows="True" CanUserSortColumns="True"
                          SelectionMode="Extended" SelectionUnit="FullRow" AutoGenerateColumns="False"
                          AreRowDetailsFrozen="False" Height="auto" Background="White" IsReadOnly="{Binding mIsReadOnly}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Compare Result" Binding="{Binding mCompareResult}" 
                                                Visibility="{Binding Source={x:Reference AircraftEquipmentConfigTreeView}, Path=SelectedItem.mConfigInfoCompareResultColumnVisibility}"/>
                            <DataGridTextColumn Header="Config Info Index" Binding="{Binding mItemIndex}"/>
                            <DataGridTextColumn Header="Config info" Binding="{Binding mItemInfo}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Expander>
        </Grid>
    </Grid>
</UserControl>
